<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAQAAAAAABoBgAAFgAAACgAAAAwAAAAYAAAAAEABAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIgIgAAAAAAAAAAAAAAAAAAAAAAAAAAAB4gIgAAIgAAAAAAAAAAAAAAAAAAAAAAA
        d4gIgAAIgAAAAAAAAAAAAAAAAAAAAAAHd4gIgIgIgAAAAAAAAAAAAAAAAAAAAACHd4gIgIgIgAAIgAAA
        AAAAAAAAAAAAAACHd4gHcIgIgAAIgAAAAAAAAAAAAAAAAAeHf4iACIgIgIgIgAAAAAAAAAAAAAAAAHeH
        /3eIiIgIgIgIgAAIgAAAAAAAAAAAiHeP93d3iIgHcIgIgAAIgAAAAAAAAAAHiHePd3d3d4iACIgIgIgI
        gAAAAAAAAAB3iHeHd3d3d3eIiIgIgIgIgAAIgAAAAAd3iHeHd3d3d3d3iIgHcIgIgAAIgAAAiHd3iHeI
        d3d3d3d3d4iACIgIgIgIgAAAiHd3iHd4d3d3d3d3d3eIiIgIgIgIgAAAiHd/+IiHd3d3d3d3d3d3iIgH
        cIgIgAAAiHf/d3d3d3d3d3d3d3d3d4iACIgIgIgAiH/3d3d3d3d3d3d3d3d3d3eIiIgIgIgAiP93d3d3
        d3d3d3d3d3d3d3d3iIgHcIgAiPd3d3d3d3d3d3d3d3d3d3d3d4iACIgAiHd3d3d3d3d3d3d3d3d3d3d3
        d3eIiIgACId3d3d3d3d3d3d3d3d3d3d3d3d3iIgAAAiHd3d3d3d3d3d3d3d3d3d3d3d3d4gAAAAIh3d3
        d3d3d3d3d3d3d3d3d3d3d3cAAAAACId3d3d3d3d3d3d3d3d3d3d3d3AAAAAAAAiHd3d3d3d3d3d3d3d3
        d3d3dwAAAAAAAAAIh3d3d3d3d3d3d3d3d3d3cAAAAAAAAAAACId3d3d3d3d3d3d3d3d3AAAAAAAAAAAA
        AAiHd3d3d3d3d3d3d3dwAAAAAAAAAAAAAAAIh3d3d3d3d3d3d3cAAAAAAAAAAAAAAAAACId3d3d3d3d3
        d3AAAAAAAAAAAAAAAAAAAAiHd3d3d3d3dwAAAAAAAAAAAAAAAAAAAAAIh3d3d3d3cAAAAAAAAAAAAAAA
        AAAAAAAACId3d3d3AAAAAAAAAAAAAAAAAAAAAAAAAAiHd3dwAAAAAAAAAAAAAAAAAAAAAAAAAAAIh3cA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////AAD///////8AAP//n////wAA//8P////AAD//A////8AAP/4
        Dn///wAA//AMP///AAD/4AA////t7f/AADn//wAA/8AAMP//AAD/gAAA//8AAP8AAADn/wAA/AAAAMP/
        AAD4AAAAA//t7fAAAAADnwDs4AAAAAMPAADAAAAAAA8AAAAAAAAADwAAAAAAAAAPAAAAAAAAAAPt7QAA
        AAAAAQDvAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAACAAAAAAAHt7MAAAAAAAQD34AAAAAAB
        AAD+AAAAAAMAAP8AAAAABwAA/4AAAAAPAAD/+AAAAB/s7f/8AAAAPwDv//4AAAB/7AD//+AAAP8AAP//
        8AAB/wAA///4AAP/AAD///+AB//t7P///8AP/wD3////4B//9wD////8P/8AAP///////wAA////////
        AAD///////9zc////////wD3////////9wD///////8AAP///////wAA
</value>
  </data>
</root>